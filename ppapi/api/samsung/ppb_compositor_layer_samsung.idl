/* Copyright (c) 2015 Samsung Electronics. All rights reserved.
 */

/**
 * This file defines interface <code>PPB_CompositorLayer_Samsung</code>
 * that extends <code>PPB_CompositorLayer</code> interface with possibility
 * to create Samsung specific layers.
 */

[generate_thunk]

label Chrome {
  M42 = 0.1
};

/**
 * It is extension for <code>PPB_CompositorLayer</code> interface,
 * which allows creating Samsung specific layers.
 * To create <code>PPB_CompositorLayer_Samsung</code> resource please use
 * <code>AddLayer</code> method from <code>PPB_Compositor</code> interface.
 */
interface PPB_CompositorLayer_Samsung {
  /**
   * Determines if a resource is a compositor layer samsung resource.
   *
   * @param[in] resource The <code>PP_Resource</code> to test.
   *
   * @return A <code>PP_Bool</code> with <code>PP_TRUE</code> if the given
   * resource is a compositor layer resource or <code>PP_FALSE</code>
   * otherwise.
   */
  PP_Bool IsCompositorLayerSamsung([in] PP_Resource resource);

  /**
   * Sets the background plane layer,
   * which allows to present background plane content.
   * If the layer is uninitialized, it will initialize the layer first,
   * and then set the background plane.
   * If the layer has been initialized to another kind of layer, the layer will
   * not be changed, and <code>PP_ERROR_BADARGUMENT</code> will be returned.
   * Position of layer can be controlled using
   * <code>SetClipRect</code> method from <code>PPB_CompositorLayer</code>.
   *
   * param[in] layer A <code>PP_Resource</code> corresponding to a compositor
   * layer resource.
   * param[in] size A <code>PP_Size</code> for the size of the layer before
   * transform.
   *
   * @return An int32_t containing a result code from <code>pp_errors.h</code>.
   */
  int32_t SetBackgroundPlane([in] PP_Resource layer,
                             [in] PP_Size size);
};
