// Copyright 2016 Samsung Electronics. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package sppclient;

// Stores a public/private key-pair.
// Next tag: 5
message KeyPair {
  // The type of key used for key agreement. Currently only the ECDH key
  // agreement scheme is supported, using NIST P-256.
  enum KeyType {
    ECDH_P256 = 0;
  }

  required KeyType type = 1;

  // The private key matching the size requirements of |type|.
  optional bytes private_key = 2;

  // The public key as an X.509 SubjectPublicKeyInfo block.
  optional bytes public_key_x509 = 3;

  // The public key as an uncompressed EC point according to SEC 2.3.3.
  optional bytes public_key = 4;
}

// Stores a vector of public/private key-pairs.
//
// In the current implementation, each app id will have a single encryption key-
// pair associated with it at most. The message allows for multiple key pairs
// in case we need to force-cycle all keys, allowing the old keys to remain
// valid for a period of time enabling the web app to update.
//
// Next tag: 3
message EncryptionData {
  // The actual public/private key-pairs.
  repeated KeyPair keys = 1;

  // The authentication secret associated with the subscription. Must be a
  // cryptographically secure number of at least 12 bytes.
  required bytes auth_secret = 2;
}

// Stores a registration data associated with an app id.
// Next tag: 4
message RegistrationData {
  // The sender id associated with the registration.
  required string sender_id = 1;

  // The registration id's hash associated with the registration.
  required string registration_id_hash = 2;

  // The encryption data associated with the registration.
  required EncryptionData encryption_data = 3;
}
