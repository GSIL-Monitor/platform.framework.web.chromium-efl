# Copyright (c) 2015 Samsung Electronics. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//tizen_src/build/config/tizen_features.gni")

copy("ubrowser_script") {
  sources = [ "ubrowser.sh" ]
  outputs = [ "$root_out_dir/{{source_file_part}}" ]
}

executable("ubrowser") {
  configs += [ "//tizen_src/build:capi-system-device" ]
  configs += [ "//tizen_src/build:libcapi-system-device" ]
  public_configs = [ "//tizen_src/build:capi-system-device-public" ]
  configs += [ "//tizen_src/build:evas" ]
  configs += [ "//tizen_src/build:libevas" ]
  configs += [ "//tizen_src/build:ecore" ]
  configs += [ "//tizen_src/build:libecore" ]
  configs += [ "//tizen_src/build:ecore-evas" ]
  configs += [ "//tizen_src/build:libecore-evas" ]
  public_configs += [ "//tizen_src/build:ecore-evas-public" ]
  configs += [ "//tizen_src/build:elementary" ]
  configs += [ "//tizen_src/build:libelementary" ]
  public_configs += [ "//tizen_src/build:elementary-public" ]
  deps = [
    "//tizen_src/chromium_impl/tizen:system-info",
    "//tizen_src/ewk/efl_integration:chromium-ewk",
    "//tizen_src/ewk/efl_integration:launch_exec",
  ]
  configs += [ "//tizen_src/build:efl-extension" ]
  configs += [ "//tizen_src/build:libefl-extension" ]
  public_configs += [ "//tizen_src/build:efl-extension-public" ]
  defines = [
    # Uncomment once uBrowser replaces mini_browser and it's xml
    # manifest is shipped in the rpm package
    #"TIZEN_APP=true"
  ]
  include_dirs = [
    ".",
    "../efl_integration/public",
  ]
  sources = [
    "browser.cc",
    "browser.h",
    "logger.cc",
    "logger.h",
    "main.cc",
    "window.cc",
    "window.h",
    "window_ui.h",
    "window_ui.cc",
  ]
  deps += [ ":ubrowser_script" ]
  cflags = [
    # Treat warning as error for this target.
    # It needs to be included by means of pattern list because '-Werror' cflag
    # will be excluded in chromium side (src/build/common.gypi), and GYP
    # processes pattern lists after exclusion lists.
    # (ref: https://gyp.gsrc.io/docs/InputFormatReference.md#Processing-Order)
    "-Werror"
  ]
  ldflags = []
  libs = []
  if (is_tizen) {
    configs += [ "//tizen_src/build:capi-appfw-application" ]
    configs += [ "//tizen_src/build/config/tizen:executable_config" ]
    configs += [ "//tizen_src/build:libcapi-appfw-application" ]
    if (tizen_product_tv) {
      configs += [ "//tizen_src/build:ecore-wayland" ]
      configs += [ "//tizen_src/build:libecore-wayland" ]
      configs += [ "//tizen_src/build:vd-win-util" ]
      configs += [ "//tizen_src/build:libvd-win-util" ]
    } else {
      configs += [ "//tizen_src/build:libcapi-privacy-privilege-manager" ]
      configs += [ "//tizen_src/build:capi-privacy-privilege-manager" ]
    }
  }
}
